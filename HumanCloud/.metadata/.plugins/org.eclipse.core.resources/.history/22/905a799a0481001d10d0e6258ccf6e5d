package DataStructure;

public class MyCustomStack {
	
	int capacity=2;
	int stack[]=new int[capacity];
	int top=0;
	
	public void push(int data) {
		if(top==capacity) {
			expand();
		}
		stack[top]=data;
		top++;
	}

	private void expand() {
		int length=top;
		int newArray[]=new int [capacity +1];
		System.arraycopy(stack, 0, newArray, 0, length);
		stack=newArray;
		capacity++;		
	}
	public int pop() {
		int data=0;
		if(isEmpty()) {
			System.out.println("Stack is Empty");
		}else {
			top--;
			data=stack[top];
			stack[top]=0;
			shrink();
		}
		return data;
	}

	private void shrink() {
		int length=top;
		if(length<=(capacity/2)/2)
			capacity--;
		int newArray[]=new int[capacity-1];
		System.arraycopy(stack, 0, newArray, 0, length);
		stack=newArray;		
	}
	private boolean isEmpty() {
		return top<0;
	}
	public int peak() {
		int data;
		data=stack[top-1];
		return data;
	}
	public void show()
	{
		for(int customStack:stack)
		{
			System.out.println(customStack+" ");
		}
	}
			

}
